{% extends 'base.html.twig' %}

{% block title %}Dashboard Bancaire{% endblock %}

{% block stylesheets %}
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap');

        :root {
            --primary-color: #7355ff;
            --secondary-color: #5940db;
            --accent-color: #00d8a5;
            --dark-bg: #0e1121;
            --card-bg: #171a2f;
            --card-secondary-bg: #21253b;
            --text-primary: #ffffff;
            --text-secondary: rgba(255, 255, 255, 0.85);
            --text-muted: rgba(255, 255, 255, 0.6);
            --positive: #00d8a5;
            --negative: #ff5c75;
            --border-radius: 16px;
            --card-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
            --transition-speed: 0.3s;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Montserrat', sans-serif;
        }

        body {
            background: linear-gradient(135deg, var(--dark-bg), #141830);
            color: var(--text-primary);
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 28px 24px;
        }

        .header {
            background: rgba(23, 26, 47, 0.8);
            padding: 28px;
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            margin-bottom: 28px;
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.05);
            animation: fadeInDown 0.8s ease-out forwards;
        }

        .header h1 {
            color: var(--text-primary);
            margin-bottom: 12px;
            font-weight: 600;
            font-size: 1.8rem;
            background: linear-gradient(90deg, #fff, var(--accent-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .header p {
            color: var(--text-secondary);
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .balance-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 24px;
            margin-bottom: 28px;
            justify-items: center;
        }

        .card {
            background: rgba(23, 26, 47, 0.7);
            padding: 30px;
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            min-height: 240px;
            width: 100%;
            position: relative;
            overflow: hidden;
            transition: all var(--transition-speed) cubic-bezier(0.34, 1.56, 0.64, 1);
            transform: translateY(20px);
            opacity: 0;
            animation: slideUp 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
            animation-delay: 0.2s;
            border: 1px solid rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }

        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 6px;
            background: linear-gradient(90deg, var(--accent-color), var(--primary-color));
            transform: scaleX(0);
            transform-origin: left;
            transition: transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
        }

        .card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 15px 35px rgba(115, 85, 255, 0.2);
        }

        .card:hover::before {
            transform: scaleX(1);
        }

        .card.primary {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            border: none;
        }

        .card.primary::after {
            content: '';
            position: absolute;
            width: 150px;
            height: 150px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            right: -60px;
            bottom: -60px;
            z-index: 0;
        }

        .card.primary::before {
            background: linear-gradient(90deg, #fff, rgba(255, 255, 255, 0.5));
        }

        .card.secondary {
            background: var(--card-secondary-bg);
            border: 1px solid rgba(255, 255, 255, 0.05);
        }

        .card h2 {
            font-size: 1.1rem;
            margin-bottom: 14px;
            font-weight: 600;
            color: var(--text-secondary);
            position: relative;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 0.85rem;
            z-index: 1;
        }

        .card.primary h2 {
            color: rgba(255, 255, 255, 0.9);
        }

        .card .amount {
            font-size: 2.8rem;
            font-weight: 700;
            margin-bottom: 18px;
            letter-spacing: -1px;
            position: relative;
            z-index: 1;
            display: flex;
            align-items: center;
        }

        .card .amount::after {
            content: 'â‚¬';
            font-size: 1.8rem;
            margin-left: 5px;
            opacity: 0.8;
        }

        .card.primary .amount {
            position: relative;
            z-index: 1;
            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        }

        .card.primary .amount::before {
            content: '';
            position: absolute;
            width: 60px;
            height: 60px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            z-index: -1;
            filter: blur(25px);
            left: -20px;
            top: 0;
        }

        .card div:last-child {
            font-size: 0.9rem;
            color: var(--text-muted);
            font-weight: 500;
            position: relative;
            z-index: 1;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            padding-top: 15px;
            display: flex;
            align-items: center;
        }

        .card div:last-child::before {
            content: 'ID';
            margin-right: 5px;
            font-size: 0.7rem;
            opacity: 0.6;
            font-weight: 700;
            background: rgba(255, 255, 255, 0.1);
            padding: 3px 6px;
            border-radius: 4px;
        }

        .card.primary div:last-child {
            color: rgba(255, 255, 255, 0.8);
            border-top-color: rgba(255, 255, 255, 0.2);
        }

        .card.primary div:last-child::before {
            background: rgba(255, 255, 255, 0.2);
        }

        /* Chart SVG animation for card */
        .card::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 40px;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 320'%3E%3Cpath fill='%237355ff' fill-opacity='0.1' d='M0,128L40,133.3C80,139,160,149,240,144C320,139,400,117,480,112C560,107,640,117,720,138.7C800,160,880,192,960,186.7C1040,181,1120,139,1200,117.3C1280,96,1360,96,1400,96L1440,96L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z'%3E%3C/path%3E%3C/svg%3E");
            background-size: 100% 100%;
            opacity: 0.5;
            z-index: 0;
        }

        .card.primary::after {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 320'%3E%3Cpath fill='%23ffffff' fill-opacity='0.1' d='M0,128L40,133.3C80,139,160,149,240,144C320,139,400,117,480,112C560,107,640,117,720,138.7C800,160,880,192,960,186.7C1040,181,1120,139,1200,117.3C1280,96,1360,96,1400,96L1440,96L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z'%3E%3C/path%3E%3C/svg%3E");
            height: 50px;
            opacity: 0.3;
        }

        .transactions {
            background: rgba(23, 26, 47, 0.8);
            padding: 28px;
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            transform: translateY(20px);
            opacity: 0;
            animation: slideUp 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
            animation-delay: 0.4s;
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.05);
            position: relative;
            overflow: hidden;
        }

        .transactions::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle at top right, rgba(115, 85, 255, 0.05), transparent 70%);
            pointer-events: none;
        }

        .quick-trans {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            position: relative;
        }

        .quick-trans h2 {
            font-size: 1.3rem;
            font-weight: 600;
            letter-spacing: -0.5px;
            position: relative;
        }

        .quick-trans h2::after {
            content: '';
            display: block;
            width: 40px;
            height: 3px;
            background: var(--accent-color);
            margin-top: 8px;
            border-radius: 2px;
        }

        .transaction-list {
            list-style: none;
        }

        .transaction-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 15px;
            border-radius: 12px;
            margin-bottom: 8px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.02);
            position: relative;
            overflow: hidden;
        }

        .transaction-item::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 4px;
            background: var(--accent-color);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .transaction-item:hover {
            background: rgba(255, 255, 255, 0.05);
            transform: translateX(5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .transaction-item:hover::before {
            opacity: 1;
        }

        .transaction-info {
            flex-grow: 1;
        }

        .transaction-title {
            font-weight: 600;
            margin-bottom: 5px;
            color: var(--text-primary);
            position: relative;
            display: flex;
            align-items: center;
        }

        .transaction-title::before {
            content: '';
            display: inline-block;
            width: 8px;
            height: 8px;
            background: var(--accent-color);
            border-radius: 50%;
            margin-right: 10px;
            opacity: 0.7;
        }

        .transaction-date {
            color: var(--text-muted);
            font-size: 0.85rem;
            margin-left: 18px;
        }

        .transaction-amount {
            font-weight: 700;
            font-size: 1.1rem;
            letter-spacing: -0.5px;
            padding: 6px 12px;
            border-radius: 20px;
            min-width: 100px;
            text-align: center;
        }

        .transaction-amount.positive {
            color: var(--positive);
            background: rgba(0, 216, 165, 0.1);
        }

        .transaction-amount.negative {
            color: var(--negative);
            background: rgba(255, 92, 117, 0.1);
        }

        .quick-actions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin-bottom: 28px;
            transform: translateY(20px);
            opacity: 0;
            animation: slideUp 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
            animation-delay: 0.1s;
        }

        .action-button {
            background: rgba(23, 26, 47, 0.7);
            border: none;
            padding: 16px;
            border-radius: var(--border-radius);
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            color: var(--text-primary);
            box-shadow: var(--card-shadow);
            transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
            position: relative;
            overflow: hidden;
            z-index: 1;
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.05);
        }

        .action-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            opacity: 0;
            z-index: -1;
            transition: opacity 0.4s ease;
        }

        .action-button::after {
            content: 'â†’';
            position: absolute;
            right: 20px;
            opacity: 0;
            transition: all 0.4s ease;
            transform: translateX(-10px);
        }

        .action-button:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(115, 85, 255, 0.2);
            color: white;
            padding-right: 40px;
        }

        .action-button:hover::before {
            opacity: 1;
        }

        .action-button:hover::after {
            opacity: 1;
            transform: translateX(0);
        }

        .action-button-small {
            background: rgba(115, 85, 255, 0.1);
            border: none;
            width: 42px;
            height: 42px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            color: var(--accent-color);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
            font-size: 20px;
            border: 1px solid rgba(0, 216, 165, 0.2);
        }

        .action-button-small:hover {
            background: var(--accent-color);
            color: white;
            transform: rotate(90deg) scale(1.2);
            box-shadow: 0 6px 15px rgba(0, 216, 165, 0.3);
        }

        /* Floating particles animation */
        .container::before,
        .container::after {
            content: '';
            position: fixed;
            width: 300px;
            height: 300px;
            border-radius: 50%;
            background: var(--primary-color);
            opacity: 0.03;
            filter: blur(100px);
            pointer-events: none;
            animation: float 15s infinite ease-in-out;
        }

        .container::before {
            top: 10%;
            right: 10%;
        }

        .container::after {
            bottom: 10%;
            left: 5%;
            width: 200px;
            height: 200px;
            background: var(--accent-color);
            animation-delay: 5s;
        }

        /* Animations */
        @keyframes fadeInDown {
            from {
                transform: translateY(-20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes slideUp {
            from {
                transform: translateY(20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes float {
            0%, 100% {
                transform: translate(0, 0);
            }
            50% {
                transform: translate(30px, 30px);
            }
        }

        /* Pulse animation for primary card */
        .card.primary {
            position: relative;
            animation: fadeIn 0.8s ease-out forwards, subtle-pulse 5s infinite alternate;
        }

        @keyframes subtle-pulse {
            0% {
                box-shadow: 0 10px 25px rgba(115, 85, 255, 0.3);
            }
            100% {
                box-shadow: 0 20px 40px rgba(115, 85, 255, 0.5);
            }
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }

        /* Media Queries for better responsiveness */
        /* Styles pour la section analytics */
        .analytics {
            margin-top: 28px;
            transform: translateY(20px);
            opacity: 0;
            animation: slideUp 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
            animation-delay: 0.5s;
        }

        .analytics-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 20px;
            color: var(--text-primary);
            position: relative;
            display: inline-block;
        }

        .analytics-title::after {
            content: '';
            display: block;
            width: 50px;
            height: 3px;
            background: var(--accent-color);
            margin-top: 8px;
            border-radius: 2px;
        }

        .charts-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 24px;
            margin-bottom: 24px;
        }

        .chart-card {
            background: rgba(23, 26, 47, 0.8);
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            padding: 24px;
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.05);
            position: relative;
            overflow: hidden;
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .chart-header h3 {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--text-secondary);
        }

        .chart-period {
            display: flex;
            gap: 8px;
        }

        .chart-period span {
            font-size: 0.8rem;
            padding: 4px 8px;
            border-radius: 4px;
            background: rgba(255, 255, 255, 0.05);
            color: var(--text-muted);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .chart-period span.active {
            background: var(--primary-color);
            color: white;
        }

        .chart {
            height: 200px;
            position: relative;
        }

        .chart-labels {
            display: grid;
            grid-template-columns: repeat(9, 1fr);
            margin-top: 10px;
            gap: 5px;
            text-align: center;
        }

        .chart-labels span {
            font-size: 0.7rem;
            color: var(--text-muted);
        }

        .expenses-svg {
            width: 100%;
            height: 200px;
        }

        .chart-line {
            stroke-linecap: round;
            stroke-linejoin: round;
        }

        .data-point {
            transition: all 0.3s ease;
        }

        .data-point:hover {
            r: 8;
            filter: drop-shadow(0 0 5px var(--primary-color));
        }

        .chart-legend {
            display: flex;
            flex-wrap: wrap;
            gap: 12px;
            font-size: 0.75rem;
        }

        .legend-item {
            display: flex;
            align-items: center;
            color: var(--text-secondary);
        }

        .legend-color {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            margin-right: 6px;
        }

        .donut-svg {
            width: 100%;
            max-width: 200px;
            height: auto;
            margin: 0 auto;
            display: block;
        }

        .donut-segment {
            transition: stroke-dashoffset 1.5s ease-in-out;
        }

        .budget-overview {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 24px;
            margin-top: 24px;
        }

        .budget-card {
            background: rgba(23, 26, 47, 0.8);
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            padding: 24px;
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.05);
            position: relative;
        }

        .budget-icon {
            position: absolute;
            top: 24px;
            right: 24px;
            opacity: 0.8;
        }

        .budget-info {
            margin-bottom: 20px;
        }

        .budget-info h4 {
            font-size: 1rem;
            font-weight: 500;
            color: var(--text-secondary);
            margin-bottom: 8px;
        }

        .budget-amount {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--text-primary);
        }

        .budget-progress {
            margin-top: 15px;
        }

        .progress-bar {
            height: 8px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 10px;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, var(--accent-color), var(--primary-color));
            border-radius: 4px;
            transition: width 1.5s ease-in-out;
            width: 0;
            animation: progressAnimation 1.5s forwards 1s;
        }

        @keyframes progressAnimation {
            to { width: 65%; }
        }

        .progress-info {
            display: flex;
            justify-content: space-between;
            font-size: 0.8rem;
            color: var(--text-muted);
        }

        .upcoming-payments {
            list-style: none;
            margin-top: 15px;
        }

        .upcoming-payments li {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
            position: relative;
        }

        .upcoming-payments li:last-child {
            border-bottom: none;
        }

        .upcoming-payments li span {
            font-size: 0.9rem;
            color: var(--text-secondary);
        }

        .upcoming-payments li span:nth-child(2) {
            font-weight: 600;
            color: var(--text-primary);
        }

        .payment-date {
            font-size: 0.75rem !important;
            padding: 2px 6px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
        }

        /* Media Queries for better responsiveness */
        @media (max-width: 768px) {
            .container {
                padding: 16px;
            }
            
            .header, .card, .transactions, .chart-card, .budget-card {
                padding: 20px;
            }
            
            .card .amount {
                font-size: 2.2rem;
            }

            .action-button:hover {
                padding-right: 16px;
            }

            .action-button::after {
                display: none;
            }
            
            .charts-container {
                grid-template-columns: 1fr;
            }
            
            .chart-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }
            
            .chart-period {
                width: 100%;
                justify-content: space-between;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container">
        <header class="header">
            <h1>Bonjour, {{ prenom }} {{ nom }}</h1>
            <p>DerniÃ¨re connexion : 27 janvier 2025, 10:30</p>
        </header>

        <section class="quick-actions">
            <button class="action-button" onclick="window.location.href='{{ path('app_transaction_index') }}'">Transactions</button>
            <button class="action-button" onclick="window.location.href='{{ path('app_compte_budget') }}'">Utilisateur</button>
            {# <button class="action-button" onclick="window.location.href='{{ path('app_number_compte_index') }}'">Compte</button>
            <button class="action-button">Carte</button> #}
        </section>

        {% for compte in compteBudgets %}
            <section class="balance-cards">
                <div class="{% if compte.namecompte == "Compte Courant" %}card primary{% else %}card secondary{% endif %}">
                    <h2>{{ compte.namecompte }}</h2>
                    <div class="amount">{{ compte.solde }}</div>
                    <div>{{ compte.id }}</div>   
                </div>
            </section>
        {% endfor %}
        
        <section class="transactions">
            <div class="quick-trans">
                <h2>Transactions</h2>
                <button class="action-button-small" onclick="window.location.href='{{ path('app_transaction_index') }}'">+</button>
            </div>
            <ul class="transaction-list">
                {% for transaction in transactions %}
                    <li class="transaction-item">
                        <div class="transaction-info">
                            <div class="transaction-title">{{ transaction.description }}</div>
                            <div class="transaction-date"></div>
                        </div>
                        <div class="transaction-amount {% if transaction.montant > 0 %}positive{% else %}negative{% endif %}">
                            {{ transaction.montant }} â‚¬
                        </div>
                    </li> 
                {% endfor %}
            </ul>
        </section>

        <!-- Nouvelle section de graphiques -->
        <section class="analytics">
            <h2 class="analytics-title">AperÃ§u financier</h2>
            <div class="charts-container">
                <div class="chart-card">
                    <div class="chart-header">
                        <h3>Ã‰volution des transactions</h3>
                        <div class="chart-period">
                            <span class="active">1M</span>
                            <span>3M</span>
                            <span>6M</span>
                            <span>1A</span>
                        </div>
                    </div>
                    <div class="chart expenses-chart">
                        <svg viewBox="0 0 400 200" class="expenses-svg">
                            <defs>
                                <linearGradient id="expensesGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                    <stop offset="0%" stop-color="var(--primary-color)" stop-opacity="0.8"/>
                                    <stop offset="100%" stop-color="var(--primary-color)" stop-opacity="0.1"/>
                                </linearGradient>
                            </defs>
                            <!-- Ligne du graphique - sera remplacÃ©e par les donnÃ©es rÃ©elles -->
                            <path d="M0,150 C50,120 100,160 150,100 C200,40 250,90 300,70 C350,50 400,80 400,90" 
                                  stroke="var(--primary-color)" 
                                  stroke-width="3" 
                                  fill="none" 
                                  class="chart-line"/>
                            <!-- Zone remplie sous la ligne -->
                            <path d="M0,150 C50,120 100,160 150,100 C200,40 250,90 300,70 C350,50 400,80 400,90 L400,200 L0,200 Z" 
                                  fill="url(#expensesGradient)" 
                                  class="chart-area"/>
                            
                            <!-- Points de donnÃ©es -->
                            {% set points = [150, 120, 160, 100, 40, 90, 70, 50, 90] %}
                            {% set xStep = 400 / (points|length - 1) %}
                            
                            {% for value in points %}
                                {% set x = loop.index0 * xStep %}
                                <circle cx="{{ x }}" cy="{{ value }}" r="5" fill="var(--primary-color)" class="data-point"/>
                            {% endfor %}
                        </svg>
                        <div class="chart-labels">
                            <!-- Labels dynamiques basÃ©s sur les derniers mois -->
                            {% set months = ['Jan', 'FÃ©v', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'AoÃ»t', 'Sep', 'Oct', 'Nov', 'DÃ©c'] %}
                            {% set currentMonth = "now"|date("n") - 1 %}
                            
                            {% for i in 0..8 %}
                                {% set monthIndex = (currentMonth - 8 + i) % 12 %}
                                {% if monthIndex < 0 %}
                                    {% set monthIndex = monthIndex + 12 %}
                                {% endif %}
                                <span>{{ months[monthIndex] }}</span>
                            {% endfor %}
                        </div>
                    </div>
                </div>
                
                <div class="chart-card">
                    <div class="chart-header">
                        <h3>RÃ©partition des dÃ©penses</h3>
                        <div class="chart-legend">
                            <!-- Affichage de la lÃ©gende par dÃ©faut -->
                            <span class="legend-item"><span class="legend-color" style="background-color: var(--primary-color)"></span>Logement</span>
                            <span class="legend-item"><span class="legend-color" style="background-color: var(--accent-color)"></span>Alimentation</span>
                            <span class="legend-item"><span class="legend-color" style="background-color: #ff5c75"></span>Transport</span>
                            <span class="legend-item"><span class="legend-color" style="background-color: #ffc107"></span>Autres</span>
                        </div>
                    </div>
                    <div class="chart donut-chart">
                        <svg viewBox="0 0 100 100" class="donut-svg">
                            <!-- Calcul du total des transactions nÃ©gatives -->
                            {% set total = 0 %}
                            {% for transaction in transactions %}
                                {% if transaction.montant < 0 %}
                                    {% set total = total + (transaction.montant|abs) %}
                                {% endif %}
                            {% endfor %}
                            
                            <!-- Cercle de fond -->
                            <circle cx="50" cy="50" r="45" fill="transparent" stroke-width="10" stroke="#2d2d2d"/>
                            
                            <!-- Segments du donut (simulation de catÃ©gories) -->
                            {% set circleCircumference = 283 %}
                            
                            <!-- Utilisation de valeurs simulÃ©es pour les segments -->
                            {% set segments = [
                                {percent: 30, color: 'var(--primary-color)'},
                                {percent: 25, color: 'var(--accent-color)'},
                                {percent: 15, color: '#ff5c75'},
                                {percent: 30, color: '#ffc107'}
                            ] %}
                            
                            {% set dashoffset = 0 %}
                            {% for segment in segments %}
                                {% set segmentLength = (segment.percent / 100) * circleCircumference %}
                                <circle cx="50" cy="50" r="45" fill="transparent" stroke-width="10" stroke="{{ segment.color }}"
                                        stroke-dasharray="{{ circleCircumference }}" 
                                        stroke-dashoffset="{{ dashoffset }}"
                                        class="donut-segment"
                                        transform="rotate(-90, 50, 50)"/>
                                {% set dashoffset = dashoffset + segmentLength %}
                            {% endfor %}
                            
                            <!-- Cercle central -->
                            <circle cx="50" cy="50" r="30" fill="var(--card-bg)"/>
                            
                            <!-- Texte central avec montant total des dÃ©penses -->
                            <text x="50" y="45" text-anchor="middle" font-size="8" fill="white" font-weight="bold">{{ total|round }} â‚¬</text>
                            <text x="50" y="55" text-anchor="middle" font-size="6" fill="var(--text-muted)">DÃ‰PENSES</text>
                        </svg>
                    </div>
                </div>
            </div>
            
            <div class="budget-overview">
                <div class="budget-card">
                    <div class="budget-icon">
                        <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="var(--accent-color)" stroke-width="2">
                            <path d="M12 2L2 7l10 5 10-5-10-5z"/>
                            <path d="M2 17l10 5 10-5M2 12l10 5 10-5"/>
                        </svg>
                    </div>
                    <div class="budget-info">
                        <h4>Solde total</h4>
                        <!-- Calcul du solde total de tous les comptes -->
                        {% set totalSolde = 0 %}
                        {% for compte in compteBudgets %}
                            {% set totalSolde = totalSolde + compte.solde %}
                        {% endfor %}
                        <div class="budget-amount">{{ totalSolde|number_format(2, ',', ' ') }} â‚¬</div>
                    </div>
                    <div class="budget-progress">
                        <!-- Calcul du pourcentage des dÃ©penses du mois par rapport au solde total -->
                        {% set depensesMois = 0 %}
                        {% for transaction in transactions %}
                            {% if transaction.montant < 0 %}
                                {% set depensesMois = depensesMois + transaction.montant|abs %}
                            {% endif %}
                        {% endfor %}
                        
                        {% set budgetInitial = totalSolde + depensesMois %}
                        {% set pourcentage = 0 %}
                        {% if budgetInitial > 0 %}
                            {% set pourcentage = (depensesMois / budgetInitial * 100)|round %}
                        {% endif %}
                        
                        <div class="progress-bar">
                            <div class="progress-fill" style="width: {{ pourcentage }}%"></div>
                        </div>
                        <div class="progress-info">
                            <span>{{ pourcentage }}% utilisÃ©</span>
                            <span>{{ totalSolde|number_format(2, ',', ' ') }} â‚¬ restants</span>
                        </div>
                    </div>
                </div>
                
                <div class="budget-card">
                    <div class="budget-icon">
                        <svg viewBox="0 0 24 24" width="24" height="24" fill="none" stroke="var(--primary-color)" stroke-width="2">
                            <circle cx="12" cy="12" r="10"/>
                            <polyline points="12 6 12 12 16 14"/>
                        </svg>
                    </div>
                    <div class="budget-info">
                        <h4>DerniÃ¨res transactions</h4>
                        <!-- Calcul du montant total des derniÃ¨res transactions -->
                        {% set lastTransactionsTotal = 0 %}
                        {% for transaction in transactions|slice(0, 2) %}
                            {% set lastTransactionsTotal = lastTransactionsTotal + transaction.montant %}
                        {% endfor %}
                        <div class="budget-amount">{{ lastTransactionsTotal|number_format(2, ',', ' ') }} â‚¬</div>
                    </div>
                    <ul class="upcoming-payments">
                        <!-- Affichage des 2 derniÃ¨res transactions -->
                        {% for transaction in transactions|slice(0, 2) %}
                            <li>
                                <span>{{ transaction.description }}</span>
                                <span class="{{ transaction.montant > 0 ? 'positive' : 'negative' }}">{{ transaction.montant|number_format(2, ',', ' ') }} â‚¬</span>
                                <span class="payment-date">
                                    {% if transaction.dateTransaction is defined %}
                                        {{ transaction.dateTransaction|date('d/m') }}
                                    {% else %}
                                        --/--
                                    {% endif %}
                                </span>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            </div>
        </section>
    </div>

    <script>
        // Animation des graphiques lors du chargement
        document.addEventListener('DOMContentLoaded', function() {
            // Animation de la ligne du graphique
            const chartLine = document.querySelector('.chart-line');
            const chartArea = document.querySelector('.chart-area');
            const length = chartLine ? chartLine.getTotalLength() : 0;
            
            if (chartLine && chartArea) {
                chartLine.style.strokeDasharray = length;
                chartLine.style.strokeDashoffset = length;
                
                chartArea.style.opacity = '0';
                
                setTimeout(() => {
                    chartLine.style.transition = 'stroke-dashoffset 2s ease-in-out';
                    chartLine.style.strokeDashoffset = '0';
                    
                    setTimeout(() => {
                        chartArea.style.transition = 'opacity 1s ease-in-out';
                        chartArea.style.opacity = '1';
                    }, 1000);
                }, 500);
            }
            
            // Animation des points de donnÃ©es
            const dataPoints = document.querySelectorAll('.data-point');
            dataPoints.forEach((point, index) => {
                point.style.opacity = '0';
                point.style.transform = 'scale(0)';
                
                setTimeout(() => {
                    point.style.transition = 'all 0.5s cubic-bezier(0.34, 1.56, 0.64, 1)';
                    point.style.opacity = '1';
                    point.style.transform = 'scale(1)';
                }, 1500 + (index * 100));
            });
            
            // Animation du donut chart
            const donutSegments = document.querySelectorAll('.donut-segment');
            donutSegments.forEach((segment, index) => {
                const dashoffset = segment.getAttribute('stroke-dashoffset');
                segment.style.strokeDashoffset = '283';
                
                setTimeout(() => {
                    segment.style.transition = 'stroke-dashoffset 1.5s ease-in-out';
                    segment.style.strokeDashoffset = dashoffset;
                }, 500 + (index * 200));
            });
        });
    </script>
{% endblock %}